name: Terraform CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_CLI_ARGS: "-no-color" # Cleaner output

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.7"
        terraform_wrapper: false

    - name: Terraform Format
      run: |
        terraform fmt -recursive -check -diff
        terraform fmt -recursive # Auto-format if needed

    - name: Terraform Init
      run: terraform init -upgrade

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      # No 'id' needed here anymore as we are not setting a GITHUB_OUTPUT variable
      run: |
        terraform plan -input=false -out=tfplan
        # Capture the entire plan output to a file
        terraform show -no-color tfplan > plan_summary.txt
      continue-on-error: false # Still fail the job if planning fails

    - name: Show Plan Summary
      run: |
        echo "────────────────── Terraform Plan Summary ──────────────────"
        cat plan_summary.txt
        echo "──────────────────────────────────────────────────────────"

    - name: Terraform Apply
      # This condition ensures apply only happens on push to main
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false tfplan

    - name: Post Apply Status
      # This ensures the status is reported even if apply fails, but only for main branch pushes
      if: always() && github.ref == 'refs/heads/main'
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "Terraform apply completed successfully"
        else
          echo "Terraform apply failed"
          exit 1 # Fail the job explicitly if apply was attempted and failed
        fi