name: Terraform CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.tf'
      - '**.tfvars'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.tf'
      - '**.tfvars'

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_IN_AUTOMATION: true
  TF_CLI_ARGS: "-no-color"

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: "1.5.7"
        terraform_wrapper: false

    - name: Terraform Format
      run: |
        terraform fmt -recursive -check -diff
        terraform fmt -recursive

    - name: Terraform Init
      run: terraform init -input=false

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -out=tfplan -detailed-exitcode
        PLAN_EXIT_CODE=$?
        case $PLAN_EXIT_CODE in
          0)
            echo "No changes detected"
            echo "PLAN_HAS_CHANGES=false" >> $GITHUB_OUTPUT
            ;;
          1)
            echo "Error during plan"
            exit 1
            ;;
          2)
            echo "Changes detected"
            echo "PLAN_HAS_CHANGES=true" >> $GITHUB_OUTPUT
            terraform show -no-color tfplan > plan.txt
            ;;
        esac

    - name: Upload Plan Artifact
      if: github.event_name == 'pull_request' && steps.plan.outputs.PLAN_HAS_CHANGES == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: plan.txt

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' && steps.plan.outputs.PLAN_HAS_CHANGES == 'true'
      run: terraform apply -auto-approve -input=false tfplan

    - name: Post-Apply Status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "Terraform operation completed successfully"
        else
          echo "Terraform operation failed"
          exit 1
        fi